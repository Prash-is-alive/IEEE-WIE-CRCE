{"version":3,"sources":["assets/logos/ieeeLogo.png","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","handleToggle","useCallback","window","innerWidth","toggle","document","querySelector","style","display","MemoNavLink","React","memo","_ref","to","icon","text","onClick","createElement","NavLink","className","Icon","navLinks","useMemo","Fragment","Link","src","ieeeLogo","alt","width","type","map","link","index","key","Hero","lazy","e","then","bind","About","Promise","all","Events","Team","Contact","Error","App","Router","Suspense","fallback","justifyContent","alignItems","height","TailSpin","color","Routes","Route","path","exact","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.a5024a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ieeeLogo.9a115bf8.png\";","import React, { useCallback, useMemo } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport \"../components/Navbar.css\";\r\nimport ieeeLogo from \"../assets/logos/ieeeLogo.png\";\r\nfunction Navbar() {\r\n  // Memoized handleToggle function\r\n  const handleToggle = useCallback(() => {\r\n    if (window.innerWidth <= 1024) {\r\n      let toggle = document.querySelector(\".navLinks\").style;\r\n      toggle.display = toggle.display === \"flex\" ? \"none\" : \"flex\";\r\n    }\r\n  }, []);\r\n\r\n  // Memoized NavLink component\r\n  const MemoNavLink = React.memo(({ to, icon, text, onClick }) => {\r\n    return (\r\n      <NavLink className=\"navLink\" to={to} onClick={onClick}>\r\n        <Icon icon={icon} /> {text}\r\n      </NavLink>\r\n    );\r\n  });\r\n\r\n  // Memoized navigation links\r\n  const navLinks = useMemo(() => {\r\n    return [\r\n      { to: \"/about\", icon: \"mdi:about-circle-outline\", text: \"About\" },\r\n      { to: \"/events\", icon: \"carbon:event\", text: \"Events\" },\r\n      { to: \"/team\", icon: \"fluent:people-team-16-regular\", text: \"Team\" },\r\n      { to: \"/contact\", icon: \"tabler:mail-bolt\", text: \"Contact\" },\r\n    ];\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* Navigation bar */}\r\n      <nav className={\"navbar fixed-top\"}>\r\n        {/* Logo */}\r\n        <div>\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <img src={ieeeLogo} alt=\"IEEE\" width=\"60\" />\r\n          </Link>\r\n        </div>\r\n        {/* Toggler for small screens */}\r\n        <button className=\"navbar-toggler\" onClick={handleToggle} type=\"button\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        {/* Navigation links */}\r\n        <div className=\"navLinks\">\r\n          {navLinks.map((link, index) => (\r\n            <MemoNavLink\r\n              key={index}\r\n              to={link.to}\r\n              icon={link.icon}\r\n              text={link.text}\r\n              onClick={handleToggle}\r\n            />\r\n          ))}\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Suspense } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\nconst Hero = React.lazy(() => import(\"./components/Hero\"));\r\nconst About = React.lazy(() => import(\"./components/About\"));\r\nconst Events = React.lazy(() => import(\"./components/Events\"));\r\nconst Team = React.lazy(() => import(\"./components/Team\"));\r\nconst Contact = React.lazy(() => import(\"./components/Contact\"));\r\nconst Error = React.lazy(() => import(\"./components/Error\"));\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar />\r\n        <Suspense\r\n          fallback={\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                width: \"100vw\",\r\n                height: \"100vh\",\r\n              }}\r\n            >\r\n              <TailSpin color=\"#7ca2e3\" />\r\n            </div>\r\n          }\r\n        >\r\n          <Routes>\r\n            <Route path=\"/\" exact Component={Hero} />\r\n            <Route path=\"/about\" exact Component={About} />\r\n            <Route path=\"/events\" exact Component={Events} />\r\n            <Route path=\"/team\" exact Component={Team} />\r\n            <Route path=\"/contact\" exact Component={Contact} />\r\n            <Route path=\"*\" Component={Error} />\r\n          </Routes>\r\n        </Suspense>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n    <App />\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}